/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.proyectofinallenguajes.jframes;

import com.mycompany.proyectofinallenguajes.analizadorLexico.Automata;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.Hashtable;
import javax.swing.Action;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.text.DefaultEditorKit;
import javax.swing.undo.CannotRedoException;
import javax.swing.undo.CannotUndoException;
import javax.swing.undo.UndoManager;

/**
 *
 * @author Luis
 */
public class JFramePrincipal extends javax.swing.JFrame {

    protected UndoManager undoManager = new UndoManager();
    File archivo;
    boolean cambiosGuardados;
    /**
     * Creates new form JFramePrincipal
     */

    //Constructor
    public JFramePrincipal() {

        initComponents();
        this.setLocationRelativeTo(null);
        //Primero Enumerar filas/lienas del JText Area
        EnumeradorLineas enumerador = new EnumeradorLineas(AreaDeCarga);
        jScrollPane1.setRowHeaderView(enumerador);
        //Area de Carga
        AreaDeCarga.getDocument().addUndoableEditListener(new UndoableEditListener() {
            public void undoableEditHappened(UndoableEditEvent e) {
                undoManager.addEdit(e.getEdit());
                updateButtons();
            }
        });
        jButtonAnalisisSintactico.setEnabled(false);
        jButtonReportes.setEnabled(false);
    }

    //Actuslizar Botones de JMenuBar
    public void updateButtons() {
        jMenuItemDeshacer.setText("puede Deshacer");
        jMenuItemRehacer.setText("puede Rehacer");
        jMenuItemDeshacer.setEnabled(undoManager.canUndo());
        jMenuItemRehacer.setEnabled(undoManager.canRedo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaDeCarga = new javax.swing.JTextArea();
        jButtonAnalisisLexico = new javax.swing.JButton();
        jButtonAnalisisSintactico = new javax.swing.JButton();
        jButtonReportes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemAbrir = new javax.swing.JMenuItem();
        jMenuItemNuevo = new javax.swing.JMenuItem();
        jMenuitemGuardar = new javax.swing.JMenuItem();
        jMenuItemGuardarComo = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItemRehacer = new javax.swing.JMenuItem();
        jMenuItemDeshacer = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItemCopy = new javax.swing.JMenuItem();
        jMenuItemPaste = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IDE - Mini NetBeans XD");

        jPanel2.setBackground(new java.awt.Color(0, 153, 102));

        AreaDeCarga.setBackground(new java.awt.Color(0, 153, 102));
        AreaDeCarga.setColumns(20);
        AreaDeCarga.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        AreaDeCarga.setForeground(new java.awt.Color(255, 255, 255));
        AreaDeCarga.setRows(5);
        AreaDeCarga.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(AreaDeCarga);

        jButtonAnalisisLexico.setBackground(new java.awt.Color(255, 0, 0));
        jButtonAnalisisLexico.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButtonAnalisisLexico.setText("Analisis Lexico");
        jButtonAnalisisLexico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnalisisLexicoActionPerformed(evt);
            }
        });

        jButtonAnalisisSintactico.setBackground(new java.awt.Color(255, 0, 0));
        jButtonAnalisisSintactico.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButtonAnalisisSintactico.setText("Analisis Sintactico");

        jButtonReportes.setBackground(new java.awt.Color(255, 0, 0));
        jButtonReportes.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButtonReportes.setText("Reporte Tokens");
        jButtonReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReportesActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 153, 102));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Columna");

        jLabel2.setBackground(new java.awt.Color(0, 153, 102));
        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("IDE :)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(522, 522, 522)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButtonAnalisisLexico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(13, 13, 13))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonReportes, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAnalisisSintactico)
                        .addGap(12, 12, 12))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jButtonAnalisisLexico, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jButtonReportes, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jButtonAnalisisSintactico, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setForeground(new java.awt.Color(102, 102, 102));
        jMenuBar1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuBar1.setPreferredSize(new java.awt.Dimension(366, 40));

        jMenu5.setBackground(new java.awt.Color(255, 255, 255));
        jMenu5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu5.setForeground(new java.awt.Color(0, 153, 102));
        jMenu5.setText("Acerca");
        jMenu5.setFont(new java.awt.Font("Lato", 1, 12)); // NOI18N

        jMenuItem5.setBackground(new java.awt.Color(51, 51, 51));
        jMenuItem5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuItem5.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItem5.setText("Informacion");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem5);

        jMenuBar1.add(jMenu5);

        jMenu3.setBackground(new java.awt.Color(255, 255, 255));
        jMenu3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu3.setForeground(new java.awt.Color(0, 153, 102));
        jMenu3.setText("Archivo");
        jMenu3.setFont(new java.awt.Font("Lato", 1, 12)); // NOI18N

        jMenuItemAbrir.setBackground(new java.awt.Color(51, 51, 51));
        jMenuItemAbrir.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuItemAbrir.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemAbrir.setText("Abrir");
        jMenuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemAbrir);

        jMenuItemNuevo.setBackground(new java.awt.Color(51, 51, 51));
        jMenuItemNuevo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuItemNuevo.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemNuevo.setText("Nuevo");
        jMenuItemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemNuevo);

        jMenuitemGuardar.setBackground(new java.awt.Color(51, 51, 51));
        jMenuitemGuardar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuitemGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jMenuitemGuardar.setText("Guardar");
        jMenuitemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuitemGuardarActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuitemGuardar);

        jMenuItemGuardarComo.setBackground(new java.awt.Color(51, 51, 51));
        jMenuItemGuardarComo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuItemGuardarComo.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemGuardarComo.setText("Guardar Como");
        jMenuItemGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarComoActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemGuardarComo);

        jMenuBar1.add(jMenu3);

        jMenu8.setBackground(new java.awt.Color(255, 255, 255));
        jMenu8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu8.setForeground(new java.awt.Color(0, 153, 102));
        jMenu8.setText("Deshacer/Rehacer");
        jMenu8.setFont(new java.awt.Font("Lato", 1, 12)); // NOI18N

        jMenuItemRehacer.setBackground(new java.awt.Color(51, 51, 51));
        jMenuItemRehacer.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuItemRehacer.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemRehacer.setText("Rehacer");
        jMenuItemRehacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRehacerActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItemRehacer);

        jMenuItemDeshacer.setBackground(new java.awt.Color(51, 51, 51));
        jMenuItemDeshacer.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuItemDeshacer.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemDeshacer.setText("Deshacer");
        jMenuItemDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeshacerActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItemDeshacer);

        jMenuBar1.add(jMenu8);

        jMenu7.setBackground(new java.awt.Color(255, 255, 255));
        jMenu7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu7.setForeground(new java.awt.Color(0, 153, 102));
        jMenu7.setText("Copiar/Pegar");
        jMenu7.setFont(new java.awt.Font("Lato", 1, 12)); // NOI18N

        jMenuItemCopy.setBackground(new java.awt.Color(51, 51, 51));
        jMenuItemCopy.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuItemCopy.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemCopy.setText("Copiar");
        jMenuItemCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCopyActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItemCopy);

        jMenuItemPaste.setBackground(new java.awt.Color(51, 51, 51));
        jMenuItemPaste.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuItemPaste.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemPaste.setText("Pegar");
        jMenuItemPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPasteActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItemPaste);

        jMenuBar1.add(jMenu7);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoActionPerformed
        if (cambiosGuardados || AreaDeCarga.getText().isEmpty()) {
            archivo = null;
            AreaDeCarga.setText("");
        }
        else {
            int opcion = JOptionPane.showConfirmDialog(null, "Hay cambio(s) sin guardar \n ¿Descartar de todos modos?");
            if (opcion == 0) {
                archivo = null;
                AreaDeCarga.setText("");
            }
            else if (opcion == 1) {
                if (archivo == null) {
                    guardarDocumento();
                } else {
                    guardarEnMismoArchivo();
                }
            }
        }
    }//GEN-LAST:event_jMenuItemNuevoActionPerformed

    private void jMenuItemGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarComoActionPerformed
        guardarDocumento();
    }//GEN-LAST:event_jMenuItemGuardarComoActionPerformed

    //Metodo Archivo | Guardar, como documento .txt
    public void guardarDocumento() {
        String documento;
        JFileChooser guardar = new JFileChooser();
        
        if (guardar.showDialog(null, "Guardar Como") == JFileChooser.APPROVE_OPTION) {
            File archivoGuardar = guardar.getSelectedFile();
            if (archivoGuardar.getName().endsWith("txt")) { //Solo si termina con .txt
                documento = AreaDeCarga.getText();
                try {
                    FileOutputStream salida = new FileOutputStream(archivoGuardar);
                    byte[] bytxt = documento.getBytes();
                    salida.write(bytxt);
                    cambiosGuardados = true;
                    JOptionPane.showMessageDialog(null, "Archivo Guardado exitosamente!");
                }
                catch (FileNotFoundException e) {
                    cambiosGuardados = false;
                    JOptionPane.showMessageDialog(null, "Error al guardar Archivo");
                }
                catch (IOException ex) {
                    cambiosGuardados = false;
                    JOptionPane.showMessageDialog(null, "Error al guardar archivo");
                }
            } else { // si no termina con .txt entonces manejar error
                cambiosGuardados = false;
                JOptionPane.showMessageDialog(null, "Formato de Archivo incorrecto");
            }
        }

    }
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        JFrameAcerca acerca = new JFrameAcerca();
        acerca.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jButtonAnalisisLexicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnalisisLexicoActionPerformed
        Automata automata=new Automata(AreaDeCarga);
        automata.leerTextArea();
    }//GEN-LAST:event_jButtonAnalisisLexicoActionPerformed

    private void jMenuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirActionPerformed
        if (cambiosGuardados || AreaDeCarga.getText().isEmpty()) {
            abrir();
        }
        else {
            int opcion = JOptionPane.showConfirmDialog(null, "Hay cambio(s) sin guardar \n ¿Descartar de todos modos?");
            if (opcion == 0) {
                abrir();
                archivo=null;
            }
            else if (opcion==1) {
                if (archivo==null) {
                    guardarDocumento();
                }
                else {
                    guardarEnMismoArchivo();
                }
            }
        }
    }//GEN-LAST:event_jMenuItemAbrirActionPerformed

    //Metodo Archivo | Abrir
    public void abrir() {
        JFileChooser ventanaCarga = new JFileChooser();//Crear  objeto: file chooser para elegir docuemnto
        AreaDeCarga.setText("");
        int num = ventanaCarga.showOpenDialog(this);//Abre ventana para buscar el archivo y guardarlo como int
        if (num == JFileChooser.APPROVE_OPTION) { //Condiciones para opcion: SI cargo el archivo
            String linea; // creo una variable tipo String
            archivo = ventanaCarga.getSelectedFile(); //Convertir de tipo int tipo, a archivo, el seleccionado anteriormente
            try {
                FileReader leerArchivo = new FileReader(archivo);//Leer archvio con: fileReader
                BufferedReader textoLeido = new BufferedReader(leerArchivo);//Leer linea por linea del archivo con: bufferde reader
                while ((linea = textoLeido.readLine()) != null) { //Ciclo para escribir linea por linea del Archivo
                    AreaDeCarga.append(linea + "\n"); //Escribir cada linea leida en el JTextArea
                }
            }
            catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Error al cargar archivo");
            }
            catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error al leer archivo");
            }
        }
    }
    
    //Item: Copiar/Pegar | Copiar
    private void jMenuItemCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCopyActionPerformed
        AreaDeCarga.copy();
    }//GEN-LAST:event_jMenuItemCopyActionPerformed

    //Item: Copiar/Pegar | Pegar
    private void jMenuItemPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPasteActionPerformed
        AreaDeCarga.paste();
    }//GEN-LAST:event_jMenuItemPasteActionPerformed

    //Item: Rehacer/Deshacer | Rehacer
    private void jMenuItemRehacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRehacerActionPerformed
        try {
            undoManager.redo();
        }
        catch (CannotRedoException e) {
            e.printStackTrace();
        }
        updateButtons();
    }//GEN-LAST:event_jMenuItemRehacerActionPerformed

    //Item: Archivo | Guardar
    private void jMenuitemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuitemGuardarActionPerformed
        guardarEnMismoArchivo();

    }//GEN-LAST:event_jMenuitemGuardarActionPerformed

    //Metodo para Item: Archivo | Guardar
    public void guardarEnMismoArchivo() {
        String documento = AreaDeCarga.getText();
        if (archivo != null) {
            try {
                FileOutputStream salida = new FileOutputStream(archivo.getPath());
                byte[] bytxt = documento.getBytes();
                salida.write(bytxt);
                cambiosGuardados = true;
                JOptionPane.showMessageDialog(null, "Cambio(s) Guardado(s)");
            }
            catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Error al Guardar");
            }
            catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error al Guardar archivo");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "No ha cargado ningun Archivo");
            cambiosGuardados = false;
            guardarDocumento();
        }
    }
    
     //Item Rehacer/Deshacer | Deshacer
    private void jMenuItemDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeshacerActionPerformed
        try {
            undoManager.undo();
        } catch (CannotUndoException e) {
            e.printStackTrace();
        }
        updateButtons();
    }//GEN-LAST:event_jMenuItemDeshacerActionPerformed

    //Boton
    private void jButtonReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReportesActionPerformed
        JFrameReportes reporte=new JFrameReportes();
        reporte.setVisible(true);
    }//GEN-LAST:event_jButtonReportesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaDeCarga;
    private javax.swing.JButton jButtonAnalisisLexico;
    public static javax.swing.JButton jButtonAnalisisSintactico;
    public static javax.swing.JButton jButtonReportes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItemAbrir;
    private javax.swing.JMenuItem jMenuItemCopy;
    private javax.swing.JMenuItem jMenuItemDeshacer;
    private javax.swing.JMenuItem jMenuItemGuardarComo;
    private javax.swing.JMenuItem jMenuItemNuevo;
    private javax.swing.JMenuItem jMenuItemPaste;
    private javax.swing.JMenuItem jMenuItemRehacer;
    private javax.swing.JMenuItem jMenuitemGuardar;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
